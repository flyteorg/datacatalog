// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import datacatalog "github.com/lyft/datacatalog/protos/gen"

import mock "github.com/stretchr/testify/mock"

// ArtifactManager is an autogenerated mock type for the ArtifactManager type
type ArtifactManager struct {
	mock.Mock
}

// CreateArtifact provides a mock function with given fields: ctx, request
func (_m *ArtifactManager) CreateArtifact(ctx context.Context, request datacatalog.CreateArtifactRequest) (*datacatalog.CreateArtifactResponse, error) {
	ret := _m.Called(ctx, request)

	var r0 *datacatalog.CreateArtifactResponse
	if rf, ok := ret.Get(0).(func(context.Context, datacatalog.CreateArtifactRequest) *datacatalog.CreateArtifactResponse); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*datacatalog.CreateArtifactResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, datacatalog.CreateArtifactRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetArtifact provides a mock function with given fields: ctx, request
func (_m *ArtifactManager) GetArtifact(ctx context.Context, request datacatalog.GetArtifactRequest) (*datacatalog.GetArtifactResponse, error) {
	ret := _m.Called(ctx, request)

	var r0 *datacatalog.GetArtifactResponse
	if rf, ok := ret.Get(0).(func(context.Context, datacatalog.GetArtifactRequest) *datacatalog.GetArtifactResponse); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*datacatalog.GetArtifactResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, datacatalog.GetArtifactRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListArtifacts provides a mock function with given fields: ctx, request
func (_m *ArtifactManager) ListArtifacts(ctx context.Context, request datacatalog.ListArtifactsRequest) (*datacatalog.ListArtifactsResponse, error) {
	ret := _m.Called(ctx, request)

	var r0 *datacatalog.ListArtifactsResponse
	if rf, ok := ret.Get(0).(func(context.Context, datacatalog.ListArtifactsRequest) *datacatalog.ListArtifactsResponse); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*datacatalog.ListArtifactsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, datacatalog.ListArtifactsRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
